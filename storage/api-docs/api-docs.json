{
    "openapi": "3.0.0",
    "info": {
        "title": "My Cool API",
        "description": "An API of cool stuffs",
        "version": "1.0.0"
    },
    "paths": {
        "/api/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Retrieve a list of appointments",
                "description": "Fetch a paginated list of appointments with optional filters for patient name, doctor name, clinic name, status, and appointment time.",
                "operationId": "09fd012ab97514481bde57bbeac2699b",
                "parameters": [
                    {
                        "name": "patient_name",
                        "in": "query",
                        "description": "Filter by patient name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "doctor_name",
                        "in": "query",
                        "description": "Filter by doctor name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinic_name",
                        "in": "query",
                        "description": "Filter by clinic name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by appointment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "Filter appointments starting from this time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "Filter appointments ending at this time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "appointment_time",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Appointment"
                                            }
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get details of a specific appointment",
                "description": "Retrieve detailed information of a specific appointment by its ID.",
                "operationId": "13b46cd03a1dae29a4c4dd6e756d37da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the appointment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/appointments/doctor/{doctor_id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Retrieve appointments for a specific doctor",
                "description": "Fetch a list of appointments for a specific doctor, with optional filters.",
                "operationId": "844669ffed598994de3993b688b40608",
                "parameters": [
                    {
                        "name": "doctor_id",
                        "in": "path",
                        "description": "ID of the doctor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by appointment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "Filter appointments starting from this time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "Filter appointments ending at this time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Appointment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "name",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user and return a token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/children/{userId}": {
            "get": {
                "tags": [
                    "Children Management"
                ],
                "summary": "Retrieve all children of a user",
                "description": "Get a list of all children for a specific user.",
                "operationId": "1b4664852d2e91914c16d14ff020810d",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user whose children are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "children": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Child"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/children": {
            "post": {
                "tags": [
                    "Children Management"
                ],
                "summary": "Create a new child",
                "description": "Register a new child under a user.",
                "operationId": "ef952dd6455c6d115fd0cc3435519b81",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Child"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Child created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Child"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Retrieve all users",
                "description": "Get a list of all users.",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user",
                "description": "Register a new user in the system.",
                "operationId": "a1fce870c566eb5fc0cf3178ec5d2fed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Retrieve a specific user",
                "description": "Returns the details of a specific user by ID.",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update a user",
                "description": "Update an existing user's details.",
                "operationId": "ddfe232db1870b82493bf8bd25596d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user",
                "description": "Remove a user from the system.",
                "operationId": "43dd20becb1f47444e484cbb18ce345c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Appointment": {
                "properties": {
                    "id": {
                        "description": "Appointment ID",
                        "type": "integer"
                    },
                    "patient_id": {
                        "description": "Patient ID",
                        "type": "integer"
                    },
                    "doctor_id": {
                        "description": "Doctor ID",
                        "type": "integer"
                    },
                    "clinic_id": {
                        "description": "Clinic ID",
                        "type": "integer"
                    },
                    "appointment_time": {
                        "description": "Appointment time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "description": "Appointment status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "cancelled"
                        ]
                    }
                },
                "type": "object"
            },
            "Child": {
                "properties": {
                    "id": {
                        "description": "Child ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User ID of the parent",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of child",
                        "type": "string"
                    },
                    "dob": {
                        "description": "Date of birth of the child",
                        "type": "string",
                        "format": "date"
                    },
                    "gender": {
                        "description": "Gender of the child",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "email",
                    "name",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "role_id": {
                        "type": "number",
                        "default": 1
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Children Management",
            "description": "Children Management"
        },
        {
            "name": "User Management",
            "description": "User Management"
        }
    ]
}